---
version: 2.1

orbs:
  terraform: feedyard/terraform@0.4.0

# git push: plan, release, test sandbox
on-push-master: &on-push-master
  branches:
    only: /master/
  tags:
    ignore: /.*/

# git tag: plan, release, test continuous to production
on-tag-master: &on-tag-master
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:
  cluster-base-configure:
    parameters:
      cluster:
        description: cluster name to use for configuration
        type: string
        default: ""
    steps:
      - run:
          name: pull kubeconfig
          command: |
            mkdir ~/.kube
            SECRETHUB_VAR_ENV=<< parameters.cluster >> secrethub inject -i tpl/kubeconfig.tpl -o ~/.kube/config
      - run:
          name: deploy cluster-autoscaler
          command: bash scripts/deploy_cluster_autoscaler.sh << parameters.cluster >>
      - run:
          name: deploy metrics-apis
          command: kubectl apply -f metrics-apis --recursive
      - run:
          name: deploy containter-insights
          command: bash scripts/deploy_cloud_watch.sh << parameters.cluster >>
      - run:
          name: deploy external-dns
          command: |
            bash scripts/delegate_hosted_zone.sh << parameters.cluster >>
            bash scripts/deploy_external_dns.sh << parameters.cluster >>
      - run:
          name: deploy cert-manager
          command: bash scripts/deploy_cert_manager.sh << parameters.cluster >>
      - run:
          name: deploy default cluster certificates
          command: bash scripts/deploy_default_certificates.sh << parameters.cluster >>
      - run:
          name: validate pod status for cluster-bae-configure deployments
          command: bash scripts/cluster_deployments_test.sh << parameters.cluster >>
      - run:
          name: cis benchmarks
          command: bash scripts/kube_bench.sh

workflows:
  version: 2
  lab-platform-eks-pipeline:

    jobs:
      - terraform/plan:
          name: sandbox-change-plan
          context: twdps-di
          shell: secrethub run -- /bin/sh -eo pipefail
          workspace: sandbox
          before-terraform:
            - run:
                name: generate environmental configuration and credentials from templates
                command: |
                  secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
                  secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
                  secrethub inject -i tpl/sandbox.certmanager.json.tpl -o sandbox.certmanager.json
          after-terraform-init:
            - run:
                name: schedule taint for node_groups if environment variable TAINT is set
                command: bash scripts/taint_node_groups.sh sandbox plan
          filters: *on-push-master

      - approve-sandbox-changes:
          type: approval
          requires:
            - sandbox-change-plan
          filters: *on-push-master

      - terraform/apply:
          name: sandbox-change-apply
          context: twdps-di
          shell: secrethub run -- /bin/sh -eo pipefail
          workspace: sandbox
          before-terraform:
            - run:
                name: generate environmental configuration and credentials from templates
                command: |
                  secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
                  secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
                  secrethub inject -i tpl/sandbox.certmanager.json.tpl -o sandbox.certmanager.json
          after-terraform-init:
            - run:
                name: schedule taint for node_groups if environment variable TAINT is set
                command: bash scripts/taint_node_groups.sh sandbox plan
          after-terraform:
            - run:
                name: test sandbox account changes
                environment:
                  TEST_ENV: sandbox
                command: |
                  bash scripts/cluster_test.sh sandbox
                  bash scripts/write_cluster_credentials.sh sandbox
            - cluster-base-configure:
                cluster: sandbox
          requires:
            - approve-sandbox-changes
          filters: *on-push-master

      # git tag to release
      - terraform/plan:
          name: preview-change-plan
          context: twdps-di
          shell: secrethub run -- /bin/sh -eo pipefail
          workspace: preview
          before-terraform:
            - run:
                name: generate environmental configuration and credentials from templates
                command: |
                  secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
                  secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
          filters: *on-tag-master

      - approve-preview-changes:
          type: approval
          requires:
            - preview-change-plan
          filters: *on-tag-master

      - terraform/apply:
          name: preview-change-apply
          context: twdps-di
          shell: secrethub run -- /bin/sh -eo pipefail
          workspace: preview
          before-terraform:
            - run:
                name: generate environmental configuration and credentials from templates
                command: |
                  secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
                  secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
          after-terraform:
            - run:
                name: create route53 zone configuration for cluster.domain
                command: secrethub run -- bash tpl/delegate_hosted_zone.sh preview
            - run:
                name: test preview account changes
                environment:
                  TEST_ENV: preview
                command: |
                  secrethub run -- bash tpl/cluster_test.sh preview
                  secrethub run -- bash tpl/write_cluster_credentials.sh preview
            - cluster-base-configure:
                cluster: preview
          requires:
            - approve-preview-changes
          filters: *on-tag-master

      # repeat tag release sections for each desired environment
      #
      # typical DI pipeline is: sandbox > preview > nonprod > prod > management


      - tear-down-lab-eks:
          type: approval
          filters: *on-push-master

      - approve-teardown-eks:
          type: approval
          requires:
            - tear-down-lab-eks
          filters: *on-push-master

      - terraform/destroy:
          name: sandbox lab eks teardown
          context: twdps-di
          shell: secrethub run -- /bin/sh -eo pipefail
          workspace: sandbox
          before-terraform:
            - run:
                name: generate environmental configuration and credentials from templates
                command: |
                  secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
                  secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
          requires:
            - approve-teardown-eks
          filters: *on-push-master

      - terraform/destroy:
          name: preview lab eks teardown
          context: twdps-di
          shell: secrethub run -- /bin/sh -eo pipefail
          workspace: preview
          before-terraform:
            - run:
                name: generate environmental configuration and credentials from templates
                command: |
                  secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
                  secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
          requires:
            - approve-teardown-eks
          filters: *on-push-master
