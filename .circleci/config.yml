---
version: 2.1

orbs:
  terraform: feedyard/terraform@0.6.0

# git push: deploy sandbox, also run sandbox deploy on taint-tag
on-push-master: &on-push-master
  branches:
    only: /master/
  tags:
    only: /.*-taint$/

# git tag: release to preview cluster
on-tag-master: &on-tag-master
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:

  set-environment:
    description: generate environment credentials and configuration from templates
    parameters:
      cluster:
        type: string
        default: ''
    steps:
      - run:
          name: set ~/.terraformrc
          command: secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
      - run:
          name: set << parameters.cluster >> environment variables
          command: |
            secrethub inject -i environments/<< parameters.cluster >>.auto.tfvars.json.tpl -o << parameters.cluster >>.auto.tfvars.json
            secrethub inject -i environments/sandbox.certmanager.json.tpl -o sandbox.certmanager.json

  deploy-core-services:
    parameters:
      cluster:
        description: cluster name to use for configuration
        type: string
        default: ""
    steps:
      - run:
          name: setup kubeconfig and deploy core services
          command: |
            mkdir ~/.kube
            SECRETHUB_VAR_ENV=<< parameters.cluster >> secrethub inject -i tpl/kubeconfig.tpl -o ~/.kube/config
      - run:
          name: deploy metrics apis
          command: kubectl apply -f metrics-apis --recursive
      - run:
          name: deploy cluster-autoscaler
          command: bash scripts/deploy_cluster_autoscaler.sh << parameters.cluster >>
      - run:
          name: deploy containter-insights
          command: bash scripts/deploy_cloud_watch.sh << parameters.cluster >>
      - run:
          name: validate pod status for core services
          command: bats test
      - run:
          name: cis benchmarks
          command: bash scripts/kube_bench.sh

  check-taint:
    description: evaluate and apply node taint for updates
    parameters:
      node-group:
        type: string
        default: ''
      plan-or-apply:
        description: is this a terraform plan or apply phase?
        type: string
        default: 'plan'
    steps:
      - run:
          name: Schedule for terraform taint if ENV var set
          command: bash scripts/taint_node_groups.sh << parameters.node-group >> << parameters.plan-or-apply >>

  test-cluster:
    parameters:
      cluster:
        type: string
        default: ''
    steps:
      - run:
          name: test eks configuration
          environment:
            TEST_ENV: << parameters.cluster >>
          command: bash scripts/cluster_configuration_tests.sh << parameters.cluster >>
      - run:
          name: write cluster oidc-assume-role kubeconfig
          command: bash scripts/write_cluster_credentials.sh << parameters.cluster >>

workflows:
  version: 2
  lab-platform-eks-pipeline:

    jobs:
      - terraform/plan:
          name: sandbox-change-plan
          context: twdps-core-labs-team
          shell: secrethub run --env-file secrethub.nonprod.env -- /bin/sh -eo pipefail
          workspace: sandbox
          before-terraform:
            - set-environment:
                cluster: sandbox
          after-terraform-init:
            - check-taint:
                node-group: group_a
                plan-or-apply: plan
          filters: *on-push-master

      - approve-sandbox-changes:
          type: approval
          requires:
            - sandbox-change-plan
          filters: *on-push-master

      - terraform/apply:
          name: sandbox-change-apply
          context: twdps-di
          shell: secrethub run --env-file secrethub.nonprod.env -- /bin/sh -eo pipefail
          workspace: sandbox
          before-terraform:
            - set-environment:
                cluster: sandbox
          after-terraform-init:
            - check-taint:
                node-group: group_a
                plan-or-apply: apply
          after-terraform:
            - test-cluster:
                cluster: sandbox
            - deploy-core-services:
                cluster: sandbox
          requires:
            - approve-sandbox-changes
          filters: *on-push-master

      # release
      - terraform/plan:
          name: preview-change-plan
          context: twdps-core-labs-team
          shell: secrethub run --env-file secrethub.nonprod.env -- /bin/sh -eo pipefail
          workspace: preview
          before-terraform:
            - set-environment:
                cluster: preview
          after-terraform-init:
            - check-taint:
                node-group: group_a
                plan-or-apply: plan
          filters: *on-tag-master

      - approve-preview-changes:
          type: approval
          requires:
            - preview-change-plan
          filters: *on-tag-master

      - terraform/apply:
          name: preview-change-apply
          context: twdps-di
          shell: secrethub run --env-file secrethub.nonprod.env -- /bin/sh -eo pipefail
          workspace: preview
          before-terraform:
            - set-environment:
                cluster: preview
          after-terraform-init:
            - check-taint:
                node-group: group_a
                plan-or-apply: apply
          after-terraform:
            - test-cluster:
                cluster: preview
            - deploy-core-services:
                cluster: preview
          requires:
            - approve-preview-changes
          filters: *on-tag-master
